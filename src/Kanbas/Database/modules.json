[
  {
    "_id": "M101",
    "name": "React JS",
    "description": "Learn the fundamentals of React JS, from basic concepts to advanced state management techniques, enabling you to build dynamic and responsive web applications.",
    "course": "CS1234",
    "lessons": [
      {
        "_id": "L101",
        "name": "Introduction to React",
        "description": "This module introduces React, explaining its significance, core concepts like JSX, and how it differs from other front-end frameworks.",
        "module": "M101"
      },
      {
        "_id": "L102",
        "name": "What is React?",
        "description": "Explore what React is, its ecosystem, and how it became the go-to library for modern web development.",
        "module": "M101"
      },
      {
        "_id": "L103",
        "name": "JSX and Elements",
        "description": "Dive into JSX syntax, elements, and how they form the building blocks of a React application.",
        "module": "M101"
      }
    ]
  },
  {
    "_id": "M102",
    "name": "React Components and State",
    "description": "Covers the design and use of components in React and how to manage state across components for dynamic content.",
    "course": "CS1234",
    "lessons": [
      {
        "_id": "L201",
        "name": "Components and Props",
        "description": "Learn about components, props, and how data is passed between components in a React application.",
        "module": "M102"
      },
      {
        "_id": "L202",
        "name": "State and Lifecycle",
        "description": "Understanding the component lifecycle and using state to make interactive components.",
        "module": "M102"
      },
      {
        "_id": "L203",
        "name": "Handling Events",
        "description": "Learn how to handle events in React, making your application interactive and responsive to user input.",
        "module": "M102"
      }
    ]
  },
  {
    "_id": "M103",
    "name": "Advanced React",
    "description": "This module dives into more complex aspects of React including context, hooks, and advanced state management techniques.",
    "course": "CS1234",
    "lessons": [
      {
        "_id": "L301",
        "name": "Context API",
        "description": "Learn about the Context API for managing state more effectively across the entire app without props drilling.",
        "module": "M103"
      },
      {
        "_id": "L302",
        "name": "Hooks",
        "description": "Introduction to Hooks, a feature in React for state and lifecycle features in functional components.",
        "module": "M103"
      },
      {
        "_id": "L303",
        "name": "Higher Order Components",
        "description": "Understanding Higher Order Components (HOCs), a pattern for reusing component logic.",
        "module": "M103"
      }
    ]
  },
  {
    "_id": "M201",
    "name": "Introduction to Computer Science",
    "description": "An overview of computer science, covering fundamental concepts, historical context, and basic computational thinking.",
    "course": "CS5001",
    "lessons": [
      {
        "_id": "L101",
        "name": "History of Computing",
        "description": "A historical perspective on the development of computing, from early machines to modern computers.",
        "module": "M201"
      },
      {
        "_id": "L102",
        "name": "Basic Concepts of Computer Science",
        "description": "Introduction to the core principles of computer science, including algorithms, data structures, and complexity.",
        "module": "M201"
      },
      {
        "_id": "L103",
        "name": "Computational Thinking",
        "description": "Explores the process of problem-solving using computer science methods and tools.",
        "module": "M201"
      }
    ]
  },
  {
    "_id": "M202",
    "name": "Programming Fundamentals",
    "description": "Focuses on the basics of programming, using Python as the primary language to teach concepts applicable across programming languages.",
    "course": "CS5001",
    "lessons": [
      {
        "_id": "L201",
        "name": "Introduction to Python",
        "description": "A primer on Python for beginners, covering syntax, basic data types, and control structures.",
        "module": "M202"
      },
      {
        "_id": "L202",
        "name": "Functions and Recursion",
        "description": "Detailed look at functions, scope, and recursion in Python, explaining how they are used to write clean and efficient code.",
        "module": "M202"
      },
      {
        "_id": "L203",
        "name": "Data Structures in Python",
        "description": "Covers fundamental data structures such as lists, dictionaries, sets, and tuples, and their applications in Python.",
        "module": "M202"
      }
    ]
  },
  {
    "_id": "M203",
    "name": "Advanced Topics in Computer Science",
    "description": "Explores advanced topics in computer science including algorithms, data analysis, and software design principles.",
    "course": "CS5001",
    "lessons": [
      {
        "_id": "L301",
        "name": "Algorithm Design and Analysis",
        "description": "Introduction to the design of algorithms and analysis of their performance and computational complexity.",
        "module": "M203"
      },
      {
        "_id": "L302",
        "name": "Big Data and Data Analysis",
        "description": "Overview of big data concepts and methodologies, focusing on data collection, processing, and analysis techniques.",
        "module": "M203"
      },
      {
        "_id": "L303",
        "name": "Software Engineering Principles",
        "description": "Covers the principles of software engineering, including software development life cycles, testing, and project management.",
        "module": "M203"
      }
    ]
  },
  {
    "_id": "M301",
    "name": "Fundamentals of Discrete Mathematics",
    "description": "Introduction to discrete mathematics, covering the basics and providing a foundation for more advanced topics in the field.",
    "course": "CS5002",
    "lessons": [
      {
        "_id": "L101",
        "name": "Sets, Relations, and Functions",
        "description": "Covers the concepts of sets, relations, and functions, which are the building blocks of discrete mathematics.",
        "module": "M301"
      },
      {
        "_id": "L102",
        "name": "Logic and Propositional Calculus",
        "description": "Introduction to logic, including truth tables, logical connectives, tautologies, contradictions, and propositional calculus.",
        "module": "M301"
      },
      {
        "_id": "L103",
        "name": "Proof Techniques",
        "description": "Overview of various proof techniques used in mathematics, including direct proof, proof by contradiction, and mathematical induction.",
        "module": "M301"
      }
    ]
  },
  {
    "_id": "M302",
    "name": "Algorithms and Complexity",
    "description": "Focuses on algorithmic strategies used in solving problems and analyzing their complexities within the scope of discrete structures.",
    "course": "CS5002",
    "lessons": [
      {
        "_id": "L201",
        "name": "Introduction to Algorithms",
        "description": "Basic overview of algorithmic design, including analysis of complexity and algorithmic problem solving.",
        "module": "M302"
      },
      {
        "_id": "L202",
        "name": "Graph Theory",
        "description": "Exploration of graph theory and its applications, focusing on concepts such as paths, cycles, and planar graphs.",
        "module": "M302"
      },
      {
        "_id": "L203",
        "name": "Combinatorics and Counting",
        "description": "Discusses combinatorial techniques and counting principles, including permutations, combinations, and the Pigeonhole Principle.",
        "module": "M302"
      }
    ]
  },
  {
    "_id": "M303",
    "name": "Advanced Topics in Discrete Mathematics",
    "description": "Delves into more complex and specialized topics in discrete mathematics, applicable to computer science and optimization.",
    "course": "CS5002",
    "lessons": [
      {
        "_id": "L301",
        "name": "Boolean Algebra",
        "description": "Covers Boolean algebra and its applications in digital logic design and circuitry.",
        "module": "M303"
      },
      {
        "_id": "L302",
        "name": "Cryptography",
        "description": "Introduction to the principles of cryptography, focusing on encryption, decryption, and public key infrastructure.",
        "module": "M303"
      },
      {
        "_id": "L303",
        "name": "Discrete Optimization",
        "description": "Examines methods and principles of discrete optimization, including linear programming and network flow problems.",
        "module": "M303"
      }
    ]
  },
  {
    "_id": "M401",
    "name": "Principles of Object-Oriented Programming",
    "description": "Covers the foundational principles of object-oriented programming, including classes, objects, and methods.",
    "course": "CS5004",
    "lessons": [
      {
        "_id": "L101",
        "name": "Introduction to Object-Oriented Programming",
        "description": "Introduces the basic concepts of object-oriented programming such as encapsulation, inheritance, and polymorphism.",
        "module": "M401"
      },
      {
        "_id": "L102",
        "name": "Classes and Objects",
        "description": "Deep dive into classes and objects, focusing on constructors, methods, attributes, and their interactions.",
        "module": "M401"
      },
      {
        "_id": "L103",
        "name": "Inheritance and Polymorphism",
        "description": "Explains the concepts of inheritance and polymorphism, which allow for the creation of complex systems with reusable code.",
        "module": "M401"
      }
    ]
  },
  {
    "_id": "M402",
    "name": "Design Patterns",
    "description": "Focuses on common design patterns and best practices in object-oriented design to solve typical software design problems.",
    "course": "CS5004",
    "lessons": [
      {
        "_id": "L201",
        "name": "Creational Design Patterns",
        "description": "Covers patterns like Singleton, Factory, Abstract Factory, and Builder that deal with object creation mechanisms.",
        "module": "M402"
      },
      {
        "_id": "L202",
        "name": "Structural Design Patterns",
        "description": "Discusses patterns such as Adapter, Decorator, and Facade which help to build relationships between objects in a flexible manner.",
        "module": "M402"
      },
      {
        "_id": "L203",
        "name": "Behavioral Design Patterns",
        "description": "Explores patterns like Observer, Strategy, and Command, focusing on object interactions and responsibilities.",
        "module": "M402"
      }
    ]
  },
  {
    "_id": "M403",
    "name": "Advanced Object-Oriented Concepts",
    "description": "Delves into advanced topics in object-oriented design, including interfaces, abstract classes, and design principles.",
    "course": "CS5004",
    "lessons": [
      {
        "_id": "L301",
        "name": "Interfaces and Abstract Classes",
        "description": "Discusses the use and importance of interfaces and abstract classes in designing flexible and reusable code.",
        "module": "M403"
      },
      {
        "_id": "L302",
        "name": "SOLID Design Principles",
        "description": "Introduction to SOLID principles, a set of guidelines that enhance software maintainability and extensibility.",
        "module": "M403"
      },
      {
        "_id": "L303",
        "name": "Designing Robust and Scalable Systems",
        "description": "Focuses on designing systems that are robust, scalable, and easy to maintain, using advanced object-oriented techniques.",
        "module": "M403"
      }
    ]
  },
  {
    "_id": "M501",
    "name": "Introduction to data structures",
    "description": "Learn the basics of data structures, including arrays, linked lists, stacks, queues, and trees, and how to implement them in various programming languages.",
    "course": "CS5008",
    "lessons": [
      {
        "_id": "L101",
        "name": "Arrays and Linked Lists",
        "description": "Introduction to arrays and linked lists, their implementation, and their applications in programming.",
        "module": "M501"
      },
      {
        "_id": "L102",
        "name": "Stacks and Queues",
        "description": "Covers the concepts of stacks and queues, their implementation, and their use in solving problems.",
        "module": "M501"
      },
      {
        "_id": "L103",
        "name": "Trees and Graphs",
        "description": "Introduction to trees and graphs, their properties, and their applications in computer science.",
        "module": "M501"
      }
    ]
  },
  {
    "_id": "M502",
    "name": "Sorting and Searching Algorithms",
    "description": "Covers various sorting and searching algorithms, their complexities, and their applications in real-world scenarios.",
    "course": "CS5008",
    "lessons": [
      {
        "_id": "L201",
        "name": "Sorting Algorithms",
        "description": "Introduction to sorting algorithms such as Bubble Sort, Selection Sort, Insertion Sort, and Quick Sort.",
        "module": "M502"
      },
      {
        "_id": "L202",
        "name": "Searching Algorithms",
        "description": "Covers searching algorithms like Linear Search, Binary Search, Depth-First Search, and Breadth-First Search.",
        "module": "M502"
      },
      {
        "_id": "L203",
        "name": "Complexity Analysis",
        "description": "Explains the concept of algorithmic complexity and how it is used to analyze the efficiency of algorithms.",
        "module": "M502"
      }
    ]
  },
  {
    "_id": "M503",
    "name": "Advanced Data Structures and Algorithms",
    "description": "Delves into more complex data structures and algorithms, including hash tables, heaps, and dynamic programming.",
    "course": "CS5008",
    "lessons": [
      {
        "_id": "L301",
        "name": "Hash Tables",
        "description": "Introduction to hash tables, their implementation, and their applications in data storage and retrieval.",
        "module": "M503"
      },
      {
        "_id": "L302",
        "name": "Heaps and Priority Queues",
        "description": "Covers the concepts of heaps and priority queues, their implementation, and their use in algorithms.",
        "module": "M503"
      },
      {
        "_id": "L303",
        "name": "Dynamic Programming",
        "description": "Explains the concept of dynamic programming and how it is used to solve complex problems efficiently.",
        "module": "M503"
      }
    ]
  },
  {
    "_id": "M601",
    "name": "Introduction to Computational Geometry",
    "description": "An introduction to computational geometry, covering basic concepts, algorithms, and applications in computer science and engineering.",
    "course": "CS5350",
    "lessons": [
      {
        "_id": "L101",
        "name": "Points, Lines, and Planes",
        "description": "Introduction to basic geometric objects such as points, lines, and planes, and their properties.",
        "module": "M601"
      },
      {
        "_id": "L102",
        "name": "Convex Hulls",
        "description": "Covers the concept of convex hulls, algorithms for computing them, and their applications in computational geometry.",
        "module": "M601"
      },
      {
        "_id": "L103",
        "name": "Voronoi Diagrams",
        "description": "Introduction to Voronoi diagrams, their construction, and their use in various computational applications.",
        "module": "M601"
      }
    ]
  },
  {
    "_id": "M602",
    "name": "Geometric Algorithms",
    "description": "Focuses on algorithms for solving geometric problems, including intersection detection, polygon triangulation, and line segment intersection.",
    "course": "CS5350",
    "lessons": [
      {
        "_id": "L201",
        "name": "Intersection Detection",
        "description": "Covers algorithms for detecting intersections between geometric objects such as lines, segments, and polygons.",
        "module": "M602"
      },
      {
        "_id": "L202",
        "name": "Polygon Triangulation",
        "description": "Explains the concept of polygon triangulation, algorithms for computing it, and its applications in computational geometry.",
        "module": "M602"
      },
      {
        "_id": "L203",
        "name": "Line Segment Intersection",
        "description": "Introduction to line segment intersection algorithms and their use in solving geometric problems.",
        "module": "M602"
      }
    ]
  },
  {
    "_id": "M603",
    "name": "Computational Geometry Applications",
    "description": "Explores applications of computational geometry in various fields, including computer graphics, robotics, and geographic information systems.",
    "course": "CS5350",
    "lessons": [
      {
        "_id": "L301",
        "name": "Computer Graphics",
        "description": "Introduction to computational geometry in computer graphics, covering rendering, modeling, and animation.",
        "module": "M603"
      },
      {
        "_id": "L302",
        "name": "Robotics",
        "description": "Covers the use of computational geometry in robotics, including path planning, localization, and manipulation.",
        "module": "M603"
      },
      {
        "_id": "L303",
        "name": "Geographic Information Systems",
        "description": "Explains the applications of computational geometry in geographic information systems, including mapping and spatial analysis.",
        "module": "M603"
      }
    ]
  },
  {
    "_id": "M701",
    "name": "Introduction to Algorithms",
    "description": "An introduction to algorithms, covering basic concepts, algorithmic design techniques, and analysis of algorithm efficiency.",
    "course": "CS5800",
    "lessons": [
      {
        "_id": "L101",
        "name": "Algorithm Analysis",
        "description": "Introduction to algorithm analysis, including time complexity, space complexity, and big O notation.",
        "module": "M701"
      },
      {
        "_id": "L102",
        "name": "Divide and Conquer",
        "description": "Covers the divide and conquer algorithmic design technique, including examples like merge sort and quicksort.",
        "module": "M701"
      },
      {
        "_id": "L103",
        "name": "Dynamic Programming",
        "description": "Introduction to dynamic programming, including the principles of optimal substructure and overlapping subproblems.",
        "module": "M701"
      }
    ]
  },
  {
    "_id": "M702",
    "name": "Greedy Algorithms",
    "description": "Focuses on greedy algorithms, their design principles, and applications in solving optimization problems.",
    "course": "CS5800",
    "lessons": [
      {
        "_id": "L201",
        "name": "Introduction to Greedy Algorithms",
        "description": "Explains the concept of greedy algorithms, their properties, and how they differ from other algorithmic strategies.",
        "module": "M702"
      },
      {
        "_id": "L202",
        "name": "Huffman Coding",
        "description": "Covers Huffman coding, a popular application of greedy algorithms in data compression.",
        "module": "M702"
      },
      {
        "_id": "L203",
        "name": "Minimum Spanning Trees",
        "description": "Introduction to minimum spanning trees, algorithms for computing them, and their applications in network design.",
        "module": "M702"
      }
    ]
  },
  {
    "_id": "M703",
    "name": "Graph Algorithms",
    "description": "Delves into algorithms for solving graph problems, including traversal, shortest paths, and network flow.",
    "course": "CS5800",
    "lessons": [
      {
        "_id": "L301",
        "name": "Graph Traversal",
        "description": "Covers graph traversal algorithms like Depth-First Search (DFS) and Breadth-First Search (BFS) and their applications.",
        "module": "M703"
      },
      {
        "_id": "L302",
        "name": "Shortest Paths",
        "description": "Introduction to algorithms for finding shortest paths in graphs, including Dijkstra's and Bellman-Ford algorithms.",
        "module": "M703"
      },
      {
        "_id": "L303",
        "name": "Network Flow",
        "description": "Explains network flow algorithms, including Ford-Fulkerson and Edmonds-Karp, and their applications in optimization.",
        "module": "M703"
      }
    ]
  },
  {
    "_id": "M801",
    "name": "Introduction to Human Computer Interation",
    "description": "An introduction to human-computer interaction, covering basic concepts, design principles, and usability testing.",
    "course": "CS5340",
    "lessons": [
      {
        "_id": "L101",
        "name": "What is HCI?",
        "description": "Introduction to human-computer interaction, its importance, and its impact on software design.",
        "module": "M801"
      },
      {
        "_id": "L102",
        "name": "Design Principles",
        "description": "Covers design principles for creating user-friendly interfaces, including affordances, feedback, and error prevention.",
        "module": "M801"
      },
      {
        "_id": "L103",
        "name": "Usability Testing",
        "description": "Introduction to usability testing, including methods, tools, and best practices for evaluating user interfaces.",
        "module": "M801"
      }
    ]
  },
  {
    "_id": "M802",
    "name": "User Interface Design",
    "description": "Focuses on user interface design principles, including visual design, interaction design, and user experience.",
    "course": "CS5340",
    "lessons": [
      {
        "_id": "L201",
        "name": "Visual Design",
        "description": "Covers visual design principles for creating aesthetically pleasing and engaging user interfaces.",
        "module": "M802"
      },
      {
        "_id": "L202",
        "name": "Interaction Design",
        "description": "Explains interaction design principles, including user flows, wireframing, and prototyping.",
        "module": "M802"
      },
      {
        "_id": "L203",
        "name": "User Experience",
        "description": "Introduction to user experience design, focusing on user research, personas, and user testing.",
        "module": "M802"
      }
    ]
  },
  {
    "_id": "M803",
    "name": "Mobile User Interface Design",
    "description": "Explores user interface design principles specific to mobile devices, including responsive design, touch interactions, and mobile usability.",
    "course": "CS5340",
    "lessons": [
      {
        "_id": "L301",
        "name": "Responsive Design",
        "description": "Covers responsive design principles for creating interfaces that adapt to different screen sizes and devices.",
        "module": "M803"
      },
      {
        "_id": "L302",
        "name": "Touch Interactions",
        "description": "Explains touch interaction design principles, including gestures, touch targets, and feedback.",
        "module": "M803"
      },
      {
        "_id": "L303",
        "name": "Mobile Usability",
        "description": "Introduction to mobile usability principles, including performance, navigation, and user engagement.",
        "module": "M803"
      }
    ]
  }
]
